# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - bot-notificacoes-telegram

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Verify installed packages
        run: pip list




      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          echo "VIRTUAL_ENV=$(pwd)/venv" >> $GITHUB_ENV
          echo "PATH=$(pwd)/venv/bin:$PATH" >> $GITHUB_ENV
          echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
          echo "PYTHONUNBUFFERED=1" >> $GITHUB_ENV
          echo "PYTHONIOENCODING=utf-8" >> $GITHUB_ENV
          echo "PYTHONFAULTHANDLER=1" >> $GITHUB_ENV
          echo "PYTHONHASHSEED=random" >> $GITHUB_ENV
          echo "PYTHONOPTIMIZE=1" >> $GITHUB_ENV
          echo "PYTHONPYCACHEPREFIX=$(pwd)/.pycache" >> $GITHUB_ENV

      - name: Check Python version
        run: |
          python --version
          pip --version
          pip list
          python -c "import sys; print(sys.executable)"
          python -c "import sys; print(sys.path)"
          python -c "import sys; print(sys.version)"
          python -c "import sys; print(sys.platform)"
          python -c "import sys; print(sys.prefix)"
          python -c "import sys; print(sys.base_prefix)"
          python -c "import sys; print(sys.base_exec_prefix)"
          python -c "import sys; print(sys.exec_prefix)"
          python -c "import sys; print(sys.executable)"
          python -c "import sys; print(sys.path)"
          
      
      - name: Install dependencies
        run: |
         source venv/bin/activate
         pip install -r requirements.txt

      - name: run tests
        run: |
          source venv/bin/activate
          pytest tests/
          # Uncomment and modify the line above to run your tests
          # Ensure you have pytest or any other test framework installed in requirements.txt
          # For Django, you can use: python manage.py test
          # For Flask, you can use: flask test

        
      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7D1B5565DCDB4CFDB000F1CCE2FD2ED3 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_91CECDE1D1C24428A7BD3773A79DC93B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7D3A5C46767043099576C14ECB06651F }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'bot-notificacoes-telegram'
          slot-name: 'Production'
          